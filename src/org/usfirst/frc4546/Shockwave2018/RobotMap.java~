// RobotBuilder Version: 2.0
//
// This file was generated by RobotBuilder. It contains sections of
// code that are automatically generated and assigned by robotbuilder.
// These sections will be updated in the future when you export to
// Java from RobotBuilder. Do not put any code or make any change in
// the blocks indicating autogenerated code or it will be lost on an
// update. Deleting the comments indicating the section will prevent
// it from being updated in the future.


package org.usfirst.frc4546.Shockwave2018;

// BEGIN AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=IMPORTS
import edu.wpi.first.wpilibj.PowerDistributionPanel;
import edu.wpi.first.wpilibj.Spark;
import edu.wpi.first.wpilibj.SpeedController;

    // END AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=IMPORTS
import edu.wpi.first.wpilibj.livewindow.LiveWindow;

/**
 * The RobotMap is a mapping from the ports sensors and actuators are wired into
 * to a variable name. This provides flexibility changing wiring, makes checking
 * the wiring easier and significantly reduces the number of magic numbers
 * floating around.
 */
public class RobotMap {
    // BEGIN AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=DECLARATIONS
    public static PowerDistributionPanel pDPSubPowerDistributionPanel;
    public static SpeedController controlSubSpeedController1;
    public static SpeedController controlSubSpeedController2;
    public static SpeedController controlSubSpeedController3;
    public static SpeedController controlSubSpeedController4;
    public static SpeedController controlSubSpeedController5;
    public static SpeedController controlSubSpeedController6;
    public static SpeedController controlSubSpeedController7;
    public static SpeedController controlSubSpeedController8;
    public static SpeedController controlSubSpeedController9;
    public static SpeedController controlSubSpeedController10;

    // END AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=DECLARATIONS

    public static void init() {
        // BEGIN AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=CONSTRUCTORS
        pDPSubPowerDistributionPanel = new PowerDistributionPanel(0);
        LiveWindow.addSensor("PDPSub", "PowerDistributionPanel", pDPSubPowerDistributionPanel);
        
        controlSubSpeedController1 = new Spark(0);
        LiveWindow.addActuator("ControlSub", "Speed Controller 1", (Spark) controlSubSpeedController1);
        controlSubSpeedController1.setInverted(false);
        controlSubSpeedController2 = new Spark(1);
        LiveWindow.addActuator("ControlSub", "Speed Controller 2", (Spark) controlSubSpeedController2);
        controlSubSpeedController2.setInverted(false);
        controlSubSpeedController3 = new Spark(3);
        LiveWindow.addActuator("ControlSub", "Speed Controller 3", (Spark) controlSubSpeedController3);
        controlSubSpeedController3.setInverted(false);
        controlSubSpeedController4 = new Spark(4);
        LiveWindow.addActuator("ControlSub", "Speed Controller 4", (Spark) controlSubSpeedController4);
        controlSubSpeedController4.setInverted(false);
        controlSubSpeedController5 = new Spark(5);
        LiveWindow.addActuator("ControlSub", "Speed Controller 5", (Spark) controlSubSpeedController5);
        controlSubSpeedController5.setInverted(false);
        controlSubSpeedController6 = new Spark(6);
        LiveWindow.addActuator("ControlSub", "Speed Controller 6", (Spark) controlSubSpeedController6);
        controlSubSpeedController6.setInverted(false);
        controlSubSpeedController7 = new Spark(7);
        LiveWindow.addActuator("ControlSub", "Speed Controller 7", (Spark) controlSubSpeedController7);
        controlSubSpeedController7.setInverted(false);
        controlSubSpeedController8 = new Spark(8);
        LiveWindow.addActuator("ControlSub", "Speed Controller 8", (Spark) controlSubSpeedController8);
        controlSubSpeedController8.setInverted(false);
        controlSubSpeedController9 = new Spark(2);
        LiveWindow.addActuator("ControlSub", "Speed Controller 9", (Spark) controlSubSpeedController9);
        controlSubSpeedController9.setInverted(false);
        controlSubSpeedController10 = new Spark(9);
        LiveWindow.addActuator("ControlSub", "Speed Controller 10", (Spark) controlSubSpeedController10);
        controlSubSpeedController10.setInverted(false);

    // END AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=CONSTRUCTORS
    }
}
