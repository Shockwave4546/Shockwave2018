// RobotBuilder Version: 2.0
//
// This file was generated by RobotBuilder. It contains sections of
// code that are automatically generated and assigned by robotbuilder.
// These sections will be updated in the future when you export to
// Java from RobotBuilder. Do not put any code or make any change in
// the blocks indicating autogenerated code or it will be lost on an
// update. Deleting the comments indicating the section will prevent
// it from being updated in the future.


package org.usfirst.frc4546.Shockwave2018.commands;
import edu.wpi.first.wpilibj.SpeedController;
import edu.wpi.first.wpilibj.Talon;
import edu.wpi.first.wpilibj.Timer;
import edu.wpi.first.wpilibj.VictorSP;
import edu.wpi.first.wpilibj.command.Command;
import org.usfirst.frc4546.Shockwave2018.Robot;
import org.usfirst.frc4546.Shockwave2018.RobotMap;
import org.usfirst.frc4546.Shockwave2018.subsystems.ControlSub;

/**
 *
 */
public class AutonomousCommand extends Command {
	
	private static final int kMotorPort1 = 1;
	private SpeedController speedController1 = RobotMap.controlSubSpeedController1;
	private static final int kMotorPort2 = 2;
	private SpeedController speedController2 = RobotMap.controlSubSpeedController2;
	private static final int kMotorPort3 = 3;
	private SpeedController speedController3 = RobotMap.controlSubSpeedController3;
	private static final int kMotorPort4 = 4;
	private SpeedController speedController4 = RobotMap.controlSubSpeedController4;
	
    public AutonomousCommand() {
    	speedController1 = new VictorSP(kMotorPort1);
    	speedController2 = new VictorSP(kMotorPort2);
    	speedController3 = new VictorSP(kMotorPort3);
    	speedController4 = new VictorSP(kMotorPort4);
    	
    	
    	
    }

    // Called just before this Command runs the first time
    @Override
    protected void initialize() {
    	
    	
    }

    // Called repeatedly when this Command is scheduled to run
    @Override
    protected void execute() {
    	speedController1.set(0.5);
    	speedController2.set(0.5);
    	speedController3.set(0.5);
    	speedController4.set(0.5);
    	
    	Timer.delay(1);
    	
    	speedController1.set(-0.5);
    	speedController2.set(-0.5);
    	speedController3.set(-0.5);
    	speedController4.set(-0.5);
    	
    	Timer.delay(1);
    	
    	
    	
    	
    }

    // Make this return true when this Command no longer needs to run execute()
    @Override
    protected boolean isFinished() {
        return false;
    }

    // Called once after isFinished returns true
    @Override
    protected void end() {
    }

    // Called when another command which requires one or more of the same
    // subsystems is scheduled to run
    @Override
    protected void interrupted() {
    }
}
